{"ast":null,"code":"import _classCallCheck from \"/Users/pedroseromenho/Documents/gyuto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pedroseromenho/Documents/gyuto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pedroseromenho/Documents/gyuto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pedroseromenho/Documents/gyuto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pedroseromenho/Documents/gyuto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pedroseromenho/Documents/gyuto/src/components/pageInfo/assets/infoText/InfoText.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport { Col, Row } from \"react-flexbox-grid\";\nimport Media from \"react-media\";\n\nvar InfoText =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InfoText, _Component);\n\n  function InfoText() {\n    _classCallCheck(this, InfoText);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(InfoText).apply(this, arguments));\n  }\n\n  _createClass(InfoText, [{\n    key: \"render\",\n    value: function render() {\n      var paragraphes = \"\";\n      var id = this.props.id.id.toString();\n\n      if (id.length === 1 && this.props.info[id].paragraphes) {\n        paragraphes = this.props.info[id].paragraphes.map(function (para) {\n          if (para.title_paragraphe) {\n            return React.createElement(Fragment, {\n              key: \"para\" + para.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 13\n              },\n              __self: this\n            }, React.createElement(Col, {\n              xs: 12,\n              className: \"paragraphes\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 14\n              },\n              __self: this\n            }, React.createElement(\"h5\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 15\n              },\n              __self: this\n            }, para.title_paragraphe.fr), React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 16\n              },\n              __self: this\n            }, para.text.fr)), React.createElement(Col, {\n              xs: 12,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 18\n              },\n              __self: this\n            }, para.galery && para.galery.map(function (gal) {\n              return React.createElement(Fragment, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 21\n                },\n                __self: this\n              }, React.createElement(\"img\", {\n                key: gal.image.id,\n                src: gal.image.url,\n                alt: gal.image.title.fr,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 22\n                },\n                __self: this\n              }), React.createElement(\"p\", {\n                className: \"imgLegend\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 27\n                },\n                __self: this\n              }, gal.image.title.fr));\n            })));\n          } else {\n            return React.createElement(Fragment, {\n              key: \"para\" + para.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 36\n              },\n              __self: this\n            }, React.createElement(Col, {\n              xs: 12,\n              className: \"paragraphes\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37\n              },\n              __self: this\n            }, React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38\n              },\n              __self: this\n            }, para.text.fr)), React.createElement(Col, {\n              xs: 12,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40\n              },\n              __self: this\n            }, para.galery && para.galery.map(function (gal) {\n              return React.createElement(Fragment, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 43\n                },\n                __self: this\n              }, React.createElement(\"img\", {\n                key: gal.image.id,\n                src: gal.image.url,\n                alt: gal.image.title.fr,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 44\n                },\n                __self: this\n              }), React.createElement(\"p\", {\n                className: \"imgLegend\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 49\n                },\n                __self: this\n              }, gal.image.title.fr));\n            })));\n          }\n        });\n      } else if (id.length === 2 && this.props.info[id.charAt(0)].sub_category[id.charAt(1)].paragraphes) {\n        paragraphes = this.props.info[id.charAt(0)].sub_category[id.charAt(1)].paragraphes.map(function (par) {\n          if (par.title_paragraphe) {\n            return React.createElement(Fragment, {\n              key: \"par\" + par.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67\n              },\n              __self: this\n            }, React.createElement(Col, {\n              xs: 12,\n              className: \"paragraphes\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 68\n              },\n              __self: this\n            }, React.createElement(\"h5\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 69\n              },\n              __self: this\n            }, par.title_paragraphe.fr), React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70\n              },\n              __self: this\n            }, par.text.fr)), React.createElement(Col, {\n              xs: 12,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72\n              },\n              __self: this\n            }, par.galery && par.galery.map(function (gal) {\n              return React.createElement(Fragment, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 75\n                },\n                __self: this\n              }, React.createElement(\"img\", {\n                key: gal.image.id,\n                src: gal.image.url,\n                alt: gal.image.title.fr,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 76\n                },\n                __self: this\n              }), React.createElement(\"p\", {\n                className: \"imgLegend\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 81\n                },\n                __self: this\n              }, gal.image.title.fr));\n            })));\n          } else {\n            return React.createElement(Fragment, {\n              key: \"par\" + par.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 90\n              },\n              __self: this\n            }, React.createElement(Col, {\n              xs: 12,\n              className: \"paragraphes\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91\n              },\n              __self: this\n            }, React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92\n              },\n              __self: this\n            }, par.text.fr)), React.createElement(Col, {\n              xs: 12,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 94\n              },\n              __self: this\n            }, par.galery && par.galery.map(function (gal) {\n              return React.createElement(Fragment, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 97\n                },\n                __self: this\n              }, React.createElement(\"img\", {\n                key: gal.image.id,\n                src: gal.image.url,\n                alt: gal.image.title.fr,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 98\n                },\n                __self: this\n              }), React.createElement(\"p\", {\n                className: \"imgLegend\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 103\n                },\n                __self: this\n              }, gal.image.title.fr));\n            })));\n          }\n        });\n      } else if (id.length === 3 && this.props.info[id.charAt(0)].sub_category[id.charAt(1)].sub_category[id.charAt(2)].paragraphes) {\n        paragraphes = this.props.info[id.charAt(0)].sub_category[id.charAt(1)].sub_category[id.charAt(2)].paragraphes.map(function (pa) {\n          if (pa.title_paragraphe) {\n            return React.createElement(Fragment, {\n              key: \"pa\" + pa.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 122\n              },\n              __self: this\n            }, React.createElement(Col, {\n              xs: 12,\n              className: \"paragraphes\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 123\n              },\n              __self: this\n            }, React.createElement(\"h5\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124\n              },\n              __self: this\n            }, pa.title_paragraphe.fr), React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 125\n              },\n              __self: this\n            }, pa.text.fr)), React.createElement(Col, {\n              xs: 12,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 127\n              },\n              __self: this\n            }, pa.galery && pa.galery.map(function (gal) {\n              return React.createElement(\"img\", {\n                key: gal.image.id,\n                src: gal.image.url,\n                alt: gal.image.title.fr,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 130\n                },\n                __self: this\n              });\n            })));\n          } else {\n            return React.createElement(Fragment, {\n              key: \"pa\" + pa.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142\n              },\n              __self: this\n            }, React.createElement(Col, {\n              xs: 12,\n              className: \"paragraphes\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 143\n              },\n              __self: this\n            }, React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 144\n              },\n              __self: this\n            }, pa.text.fr)), React.createElement(Col, {\n              xs: 12,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 146\n              },\n              __self: this\n            }, pa.galery && pa.galery.map(function (gal) {\n              return React.createElement(\"img\", {\n                key: gal.image.id,\n                src: gal.image.url,\n                alt: gal.image.title.fr,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 149\n                },\n                __self: this\n              });\n            })));\n          }\n        });\n      }\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Media, {\n        query: \"(max-width: 1000px)\",\n        render: function render() {\n          return React.createElement(Col, {\n            xs: 12,\n            sm: 12,\n            md: 9,\n            lg: 9,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          }, React.createElement(Row, {\n            className: \"infoContainer\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169\n            },\n            __self: this\n          }, paragraphes));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(Media, {\n        query: \"(min-width: 1000px)\",\n        render: function render() {\n          return React.createElement(Col, {\n            xs: 12,\n            sm: 12,\n            md: 6,\n            lg: 6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          }, React.createElement(Row, {\n            className: \"infoContainer\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176\n            },\n            __self: this\n          }, paragraphes));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return InfoText;\n}(Component);\n\nexport default InfoText;","map":{"version":3,"sources":["/Users/pedroseromenho/Documents/gyuto/src/components/pageInfo/assets/infoText/InfoText.jsx"],"names":["React","Component","Fragment","Col","Row","Media","InfoText","paragraphes","id","props","toString","length","info","map","para","title_paragraphe","fr","text","galery","gal","image","url","title","charAt","sub_category","par","pa"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Col, Row } from \"react-flexbox-grid\";\nimport Media from \"react-media\";\nclass InfoText extends Component {\n    render() {\n        let paragraphes = \"\";\n        const id = this.props.id.id.toString();\n\n        if (id.length === 1 && this.props.info[id].paragraphes) {\n            paragraphes = this.props.info[id].paragraphes.map(para => {\n                if (para.title_paragraphe) {\n                    return (\n                        <Fragment key={\"para\" + para.id}>\n                            <Col xs={12} className=\"paragraphes\">\n                                <h5>{para.title_paragraphe.fr}</h5>\n                                <p>{para.text.fr}</p>\n                            </Col>\n                            <Col xs={12}>\n                                {para.galery && para.galery.map(gal => {\n                                    return (\n                                        <Fragment>\n                                            <img\n                                                key={gal.image.id}\n                                                src={gal.image.url}\n                                                alt={gal.image.title.fr}\n                                            />\n                                            <p className=\"imgLegend\">{gal.image.title.fr}</p>\n                                        </Fragment>\n                                    );\n                                })}\n                            </Col>\n                        </Fragment>\n                    );\n                } else {\n                    return (\n                        <Fragment key={\"para\" + para.id}>\n                            <Col xs={12} className=\"paragraphes\">\n                                <p>{para.text.fr}</p>\n                            </Col>\n                            <Col xs={12}>\n                                {para.galery && para.galery.map(gal => {\n                                    return (\n                                        <Fragment>\n                                            <img\n                                                key={gal.image.id}\n                                                src={gal.image.url}\n                                                alt={gal.image.title.fr}\n                                            />\n                                            <p className=\"imgLegend\">{gal.image.title.fr}</p>\n                                        </Fragment>\n                                    );\n                                })}\n                            </Col>\n                        </Fragment>\n                    );\n                }\n            });\n        } else if (\n            id.length === 2 &&\n            this.props.info[id.charAt(0)].sub_category[id.charAt(1)].paragraphes\n        ) {\n            paragraphes = this.props.info[id.charAt(0)].sub_category[\n                id.charAt(1)\n            ].paragraphes.map(par => {\n                if (par.title_paragraphe) {\n                    return (\n                        <Fragment key={\"par\" + par.id}>\n                            <Col xs={12} className=\"paragraphes\">\n                                <h5>{par.title_paragraphe.fr}</h5>\n                                <p>{par.text.fr}</p>\n                            </Col>\n                            <Col xs={12}>\n                                {par.galery && par.galery.map(gal => {\n                                    return (\n                                        <Fragment>\n                                            <img\n                                                key={gal.image.id}\n                                                src={gal.image.url}\n                                                alt={gal.image.title.fr}\n                                            />\n                                            <p className=\"imgLegend\">{gal.image.title.fr}</p>\n                                        </Fragment>\n                                    );\n                                })}\n                            </Col>\n                        </Fragment>\n                    );\n                } else {\n                    return (\n                        <Fragment key={\"par\" + par.id}>\n                            <Col xs={12} className=\"paragraphes\">\n                                <p>{par.text.fr}</p>\n                            </Col>\n                            <Col xs={12}>\n                                {par.galery && par.galery.map(gal => {\n                                    return (\n                                        <Fragment>\n                                            <img\n                                                key={gal.image.id}\n                                                src={gal.image.url}\n                                                alt={gal.image.title.fr}\n                                            />\n                                            <p className=\"imgLegend\">{gal.image.title.fr}</p>\n                                        </Fragment>\n                                    );\n                                })}\n                            </Col>\n                        </Fragment>\n                    );\n                }\n            });\n        } else if (\n            id.length === 3 &&\n            this.props.info[id.charAt(0)].sub_category[id.charAt(1)]\n                .sub_category[id.charAt(2)].paragraphes\n        ) {\n            paragraphes = this.props.info[id.charAt(0)].sub_category[\n                id.charAt(1)\n            ].sub_category[id.charAt(2)].paragraphes.map(pa => {\n                if (pa.title_paragraphe) {\n                    return (\n                        <Fragment key={\"pa\" + pa.id}>\n                            <Col xs={12} className=\"paragraphes\">\n                                <h5>{pa.title_paragraphe.fr}</h5>\n                                <p>{pa.text.fr}</p>\n                            </Col>\n                            <Col xs={12}>\n                                {pa.galery && pa.galery.map(gal => {\n                                    return (\n                                        <img\n                                            key={gal.image.id}\n                                            src={gal.image.url}\n                                            alt={gal.image.title.fr}\n                                        />\n                                    );\n                                })}\n                            </Col>\n                        </Fragment>\n                    );\n                } else {\n                    return (\n                        <Fragment key={\"pa\" + pa.id}>\n                            <Col xs={12} className=\"paragraphes\">\n                                <p>{pa.text.fr}</p>\n                            </Col>\n                            <Col xs={12}>\n                                {pa.galery && pa.galery.map(gal => {\n                                    return (\n                                        <img\n                                            key={gal.image.id}\n                                            src={gal.image.url}\n                                            alt={gal.image.title.fr}\n                                        />\n                                    );\n                                })}\n                            </Col>\n                        </Fragment>\n                    );\n                }\n            });\n        }\n\n        return (\n            <Fragment>\n                <Media\n                    query=\"(max-width: 1000px)\"\n                    render={() => (\n                        <Col xs={12} sm={12} md={9} lg={9}>\n                            <Row className=\"infoContainer\">{paragraphes}</Row>\n                        </Col>\n                    )} />\n                <Media\n                    query=\"(min-width: 1000px)\"\n                    render={() => (\n                        <Col xs={12} sm={12} md={6} lg={6}>\n                            <Row className=\"infoContainer\">{paragraphes}</Row>\n                        </Col>\n                    )} />\n            </Fragment>\n        );\n    }\n}\n\nexport default InfoText;"]},"metadata":{},"sourceType":"module"}