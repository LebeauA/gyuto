{"ast":null,"code":"import _classCallCheck from \"/Users/pedroseromenho/Documents/gyuto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pedroseromenho/Documents/gyuto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pedroseromenho/Documents/gyuto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pedroseromenho/Documents/gyuto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pedroseromenho/Documents/gyuto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pedroseromenho/Documents/gyuto/src/components/pageInfo/PageInfo.jsx\";\nimport React, { Component, Fragment } from \"react\"; // import { Helmet } from \"react-helmet\";\n\nimport { Row, Col } from \"react-flexbox-grid\";\nimport InfoIndex from \"./assets/infoIndex/InfoIndex\";\nimport InfoText from \"./assets/infoText/InfoText\";\nimport { info } from \"../data\";\nimport ToggleBox from \"../toggleBox/ToggleBox\";\nimport ToggleBoxChild from \"../toggleBox/ToggleBoxChild\";\nimport Media from \"react-media\";\nimport { withNamespaces } from 'react-i18next';\n\nvar PageInfo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PageInfo, _Component);\n\n  function PageInfo(props) {\n    var _this;\n\n    _classCallCheck(this, PageInfo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PageInfo).call(this, props));\n\n    _this.makeActive = function (id) {\n      _this.setState({\n        id: id\n      });\n    };\n\n    _this.state = {\n      id: 0\n    };\n    return _this;\n  }\n\n  _createClass(PageInfo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.title = this.props.t('nav.info');\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.title = \"Gyütö\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Media, {\n        query: \"(max-width: 700px)\",\n        render: function render() {\n          return info.map(function (inf) {\n            return React.createElement(\"div\", {\n              key: inf.id,\n              className: \"InfoMobileCtr\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44\n              },\n              __self: this\n            }, React.createElement(ToggleBox, {\n              title: inf.index_title + \" \" + inf.title.fr,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45\n              },\n              __self: this\n            }, React.createElement(Row, {\n              className: \"infoContainer\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46\n              },\n              __self: this\n            }, inf.paragraphes.map(function (para) {\n              return React.createElement(Col, {\n                xs: 12,\n                sm: 12,\n                md: 12,\n                lg: 12,\n                className: \"infoCol\",\n                key: para.id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 49\n                },\n                __self: this\n              }, React.createElement(\"p\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 57\n                },\n                __self: this\n              }, para.text.fr), para.galery && para.galery.length > 0 && para.galery.map(function (gal) {\n                return React.createElement(\"img\", {\n                  key: gal.image.id,\n                  src: gal.image.url,\n                  alt: gal.image.title.fr,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 62\n                  },\n                  __self: this\n                });\n              }));\n            })), inf.sub_category && inf.sub_category.length > 0 && inf.sub_category.map(function (sub) {\n              return React.createElement(Fragment, {\n                key: sub.id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 78\n                },\n                __self: this\n              }, React.createElement(ToggleBoxChild, {\n                title: sub.index_title + \" \" + sub.title.fr,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 79\n                },\n                __self: this\n              }, React.createElement(Row, {\n                className: \"infoContainer\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 80\n                },\n                __self: this\n              }, sub.paragraphes.map(function (para) {\n                return React.createElement(Col, {\n                  xs: 12,\n                  sm: 12,\n                  md: 12,\n                  lg: 12,\n                  className: \"infoCol\",\n                  key: para.id,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 84\n                  },\n                  __self: this\n                }, React.createElement(\"p\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 92\n                  },\n                  __self: this\n                }, para.text.fr), para.galery && para.galery.length > 0 && para.galery.map(function (gal) {\n                  return React.createElement(\"img\", {\n                    key: gal.image.id,\n                    src: gal.image.url,\n                    alt: gal.image.title.fr,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 100\n                    },\n                    __self: this\n                  });\n                }));\n              })), sub.sub_category && sub.sub_category.length > 0 && sub.sub_category.map(function (subsub) {\n                return React.createElement(ToggleBoxChild, {\n                  key: subsub.id,\n                  title: subsub.index_title + \" \" + subsub.title.fr,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 118\n                  },\n                  __self: this\n                });\n              })));\n            })));\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Media, {\n        query: \"(min-width: 701px)\",\n        render: function render() {\n          return React.createElement(Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, React.createElement(Row, {\n            className: \"pageInfo\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          }, React.createElement(InfoIndex, {\n            info: info,\n            active: _this2.makeActive,\n            id: _this2.state,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }), React.createElement(InfoText, {\n            info: info,\n            id: _this2.state,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            },\n            __self: this\n          })));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PageInfo;\n}(Component);\n\nexport default withNamespaces('common')(PageInfo);","map":{"version":3,"sources":["/Users/pedroseromenho/Documents/gyuto/src/components/pageInfo/PageInfo.jsx"],"names":["React","Component","Fragment","Row","Col","InfoIndex","InfoText","info","ToggleBox","ToggleBoxChild","Media","withNamespaces","PageInfo","props","makeActive","id","setState","state","document","title","t","map","inf","index_title","fr","paragraphes","para","text","galery","length","gal","image","url","sub_category","sub","subsub"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\n// import { Helmet } from \"react-helmet\";\nimport { Row, Col } from \"react-flexbox-grid\";\nimport InfoIndex from \"./assets/infoIndex/InfoIndex\";\nimport InfoText from \"./assets/infoText/InfoText\";\nimport { info } from \"../data\";\nimport ToggleBox from \"../toggleBox/ToggleBox\";\nimport ToggleBoxChild from \"../toggleBox/ToggleBoxChild\";\nimport Media from \"react-media\";\n\nimport { withNamespaces } from 'react-i18next';\n\n\nclass PageInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0\n    };\n  }\n\n  makeActive = id => {\n    this.setState({\n      id\n    });\n  };\n\n  componentDidMount() {\n    document.title = this.props.t('nav.info');\n  }\n\n  componentWillUnmount() {\n    document.title = \"Gyütö\";\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Media\n          query=\"(max-width: 700px)\"\n          render={() =>\n            info.map(inf => {\n              return (\n                <div key={inf.id} className=\"InfoMobileCtr\">\n                  <ToggleBox title={inf.index_title + \" \" + inf.title.fr} >\n                    <Row className=\"infoContainer\">\n                      {inf.paragraphes.map(para => {\n                        return (\n                          <Col\n                            xs={12}\n                            sm={12}\n                            md={12}\n                            lg={12}\n                            className=\"infoCol\"\n                            key={para.id}\n                          >\n                            <p>{para.text.fr}</p>\n                            {para.galery &&\n                              para.galery.length > 0 &&\n                              para.galery.map(gal => {\n                                return (\n                                  <img\n                                    key={gal.image.id}\n                                    src={gal.image.url}\n                                    alt={gal.image.title.fr}\n                                  />\n                                );\n                              }\n                              )}\n                          </Col>\n                        );\n                      })}\n                    </Row>\n                    {inf.sub_category &&\n                      inf.sub_category.length > 0 &&\n                      inf.sub_category.map(sub => {\n                        return (\n                          <Fragment key={sub.id}>\n                            <ToggleBoxChild title={sub.index_title + \" \" + sub.title.fr}>\n                              <Row className=\"infoContainer\">\n                                {sub.paragraphes.map(\n                                  para => {\n                                    return (\n                                      <Col\n                                        xs={12}\n                                        sm={12}\n                                        md={12}\n                                        lg={12}\n                                        className=\"infoCol\"\n                                        key={para.id}\n                                      >\n                                        <p>\n                                          {para.text.fr}\n                                        </p>\n                                        {para.galery &&\n                                          para.galery.length > 0 &&\n                                          para.galery.map(\n                                            gal => {\n                                              return (\n                                                <img\n                                                  key={gal.image.id}\n                                                  src={gal.image.url}\n                                                  alt={gal.image.title.fr}\n                                                />\n                                              );\n                                            }\n                                          )}\n                                      </Col>\n                                    );\n                                  }\n                                )}\n                              </Row>\n                              {sub.sub_category &&\n                                sub.sub_category.length > 0 &&\n                                sub.sub_category.map(\n                                  subsub => {\n                                    return (\n                                      <ToggleBoxChild\n                                        key={subsub.id}\n                                        title={subsub.index_title + \" \" + subsub.title.fr}\n                                      />\n                                    );\n                                  }\n                                )}\n                            </ToggleBoxChild>\n                          </Fragment>\n                        );\n                      })}\n                  </ToggleBox>\n                </div>\n              );\n            })\n          }\n        />\n        <Media\n          query=\"(min-width: 701px)\"\n          render={() => (\n            <Fragment>\n              <Row className=\"pageInfo\">\n                <InfoIndex\n                  info={info}\n                  active={this.makeActive}\n                  id={this.state}\n                />\n                <InfoText info={info} id={this.state} />\n              </Row>\n            </Fragment>\n          )}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default withNamespaces('common')(PageInfo);"]},"metadata":{},"sourceType":"module"}